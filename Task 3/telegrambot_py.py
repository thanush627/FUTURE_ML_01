# -*- coding: utf-8 -*-
"""telegrambot_py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18MzwVUxtFfRaJ71hDnaeU3y5Tl5zpnuF
"""

import os
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import google.cloud.dialogflow_v2 as dialogflow

# Set your Dialogflow credentials file path
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "dialogflow-key.json"

PROJECT_ID = "customersupportbot-lvuh"

# Dialogflow intent detection
async def detect_intent_texts(text, session_id="123456", language_code="en"):
    session_client = dialogflow.SessionsClient()
    session = session_client.session_path(PROJECT_ID, session_id)

    text_input = dialogflow.TextInput(text=text, language_code=language_code)
    query_input = dialogflow.QueryInput(text=text_input)

    response = session_client.detect_intent(request={"session": session, "query_input": query_input})
    return response.query_result.fulfillment_text

# /start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Hi! Iâ€™m your support bot. How can I help you today?")

# Handle user messages
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text
    reply = await detect_intent_texts(user_text)
    await update.message.reply_text(reply)

# Entry point
async def main():
    app = ApplicationBuilder().token("7784016914:AAFQGZm8YbgTrYL2Hd_rG3XDcdu4TIm4Bh0").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("Bot is running...")


# Run based on environment
if __name__ == "__main__":
    try:
        # CMD / Python script
        asyncio.run(main())
    except RuntimeError:
        # Colab / Jupyter Notebook
        import nest_asyncio
        nest_asyncio.apply()